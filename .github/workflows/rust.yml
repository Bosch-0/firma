name: Firma

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
  BITCOIN_VER: 0.20.1
  ANDROID_NDK_VER: android-ndk-r21d
  HOST: linux-x86_64

jobs:

  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        rust: [stable, nightly, 1.38.0]

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - run: echo "::set-env name=BITCOIN_EXE_DIR::${{ github.workspace }}/bitcoin-${{ env.BITCOIN_VER }}/bin"
      - run: curl https://bitcoincore.org/bin/bitcoin-core-$BITCOIN_VER/bitcoin-$BITCOIN_VER-x86_64-linux-gnu.tar.gz | tar -xvz bitcoin-$BITCOIN_VER/bin/bitcoind
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args:  --verbose --all

  android-lib:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target: [i686-linux-android, x86_64-linux-android, armv7-linux-androideabi, aarch64-linux-android]

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - run: echo "::set-env name=NDK::${{ github.workspace }}/${{ env.ANDROID_NDK_VER }}"
      - run: curl -o ${{ env.ANDROID_NDK_VER }}-${{ env.HOST }}.zip https://dl.google.com/android/repository/${{ env.ANDROID_NDK_VER }}-${{ env.HOST }}.zip && unzip -q ${{ env.ANDROID_NDK_VER }}-${{ env.HOST }}.zip ${{ env.ANDROID_NDK_VER }}/toolchains/llvm/prebuilt/*
      - run: cd lib && ./build-android/${{ matrix.target }}.sh
      - name: Upload libs
        uses: actions/upload-artifact@v2
        with:
          name: lib_${{ matrix.target }}
          path: target/${{ matrix.target }}/release/libfirma.so

  android-apk:
    runs-on: ubuntu-20.04
    needs: android-lib
    strategy:
      matrix:
        network: [Testnet, Mainnet, Regtest]
    steps:
      - uses: actions/checkout@v2
      - run: mkdir -p android/app/src/main/jniLibs/{x86,x86_64,armeabi-v7a,arm64-v8a}
      - uses: actions/download-artifact@v2
        with:
          name: lib_i686-linux-android
      - run: mv libfirma.so android/app/src/main/jniLibs/x86/
      - uses: actions/download-artifact@v2
        with:
          name: lib_x86_64-linux-android
      - run: mv libfirma.so android/app/src/main/jniLibs/x86_64/
      - uses: actions/download-artifact@v2
        with:
          name: lib_armv7-linux-androideabi
      - run: mv libfirma.so android/app/src/main/jniLibs/armeabi-v7a/
      - uses: actions/download-artifact@v2
        with:
          name: lib_aarch64-linux-android
      - run: mv libfirma.so android/app/src/main/jniLibs/arm64-v8a/
      - name: Build apk
        run: |
          cd android
          ./gradlew assembleNetwork${{ matrix.network }}
      - name: Upload apk
        uses: actions/upload-artifact@v2
        with:
          name: apk_${{ matrix.network }}
          path: android/app/build/outputs/apk/network${{ matrix.network }}/debug/app-network${{ matrix.network }}-debug.apk

  android-test:
    runs-on: macos-10.15  # has hardware acceleration, emulator much faster
    needs: android-apk
    strategy:
      matrix:
        api: [21, 29]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: apk_Regtest
      - name: Run Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api }}
          target: default
          arch: x86
          script: adb install app-networkRegtest-debug.apk && cd android && ./gradlew connectedNetworkRegtestDebugAndroidTest --stacktrace
